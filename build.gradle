buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'spring-log4j2-as-json-demo'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Finchley.SR1'
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    // compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-starter-log4j2'

    compile 'org.yaml:snakeyaml:1.19'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.2.0"
    testRuntime "org.junit.platform:junit-platform-launcher:1.2.0"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    dependsOn 'cleanTest'

    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    }

    reports {
        junitXml.enabled = true
        junitXml.outputPerTestCase = false
        html.enabled = true
    }
}
